plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

group = 'io.mats3.examples'
version = 'RC0-1.0.0'

java {
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

ext {
    version_Mats = '0.19.6-2023-03-29'
    version_MatsBrokerMonitor = '0.1.5-2022-11-13'

    version_ActiveMq = '5.17.4'
    version_Logback = '1.4.6'
    version_Jetty = '11.0.14'

    version_Slf4j = '2.0.7'
    version_Spring = '6.0.7'

    // Test
    version_Junit = '4.13.2'
    version_ClassGraph = '4.8.157'
}

dependencies {
    api "io.mats3:mats-impl-jms:$version_Mats"
    api "io.mats3:mats-serial-json:$version_Mats"
    api "io.mats3:mats-spring:$version_Mats"
    api "io.mats3:mats-test:$version_Mats"
    api "io.mats3:mats-localinspect:$version_Mats"
    api "io.mats3:mats-test-broker:$version_Mats"
    api "io.mats3:mats-intercept-logging:$version_Mats"

    api "io.mats3.matsbrokermonitor:matsbrokermonitor-activemq:$version_MatsBrokerMonitor"
    api "io.mats3.matsbrokermonitor:matsbrokermonitor-htmlgui:$version_MatsBrokerMonitor"
    api "io.mats3.matsbrokermonitor:matsbrokermonitor-jms:$version_MatsBrokerMonitor"

    api "org.apache.activemq:activemq-broker:$version_ActiveMq"
    api "org.apache.activemq:activemq-kahadb-store:$version_ActiveMq"

    api "ch.qos.logback:logback-classic:$version_Logback"

    api "org.eclipse.jetty:jetty-server:$version_Jetty"
    api "org.eclipse.jetty:jetty-webapp:$version_Jetty" // Servlets
    api "org.eclipse.jetty:jetty-annotations:$version_Jetty" // Annotations, e.g. @Servlet

    // Since Mats ships with dep on sl4fj 1.7, but we want Spring 6, we need to upgrade to 2.x
    api "org.slf4j:slf4j-api:$version_Slf4j"

    api "org.springframework:spring-context:$version_Spring"
    api "org.springframework:spring-tx:$version_Spring"

    // :: Testing:
    // Junit
    testImplementation "junit:junit:$version_Junit"

    // :: ActiveMQ console - which I didn't manage to get running, due to JSP being awful.
    // (Attempt that didn't work out, keeping code for now)
    // .. this needs to be present due to compile time dep in "FindActiveMqConsole"
    testImplementation "io.github.classgraph:classgraph:$version_ClassGraph"
    // testImplementation "org.apache.activemq:activemq-web-console:${version_ActiveMq}@war"
    // testImplementation "org.eclipse.jetty:apache-jsp:$version_Jetty"
    // testImplementation "org.eclipse.jetty:apache-jstl:$version_Jetty"
    // testImplementation "javax.servlet:jstl:1.2"  // this didn't work either..

}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'Mats^3 Examples'
                description = 'Tooling to create simple Mats3 examples, plus a bunch of JBang examples'
                url = 'https://github.com/centiservice/mats-examples'
                licenses {
                    license {
                        name = 'Apache 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'stolsvik'
                        name = 'Endre St√∏lsvik'
                        email = 'endre@stolsvik.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/centiservice/mats-examples.git'
                    developerConnection = 'scm:git:ssh://github.com:centiservice/mats-examples.git'
                    url = 'https://github.com/centiservice/mats-examples'
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            name 'SonatypeOSSRHSnapshot'
            url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                // using findProperty(..) to be able to build without it being defined.
                username findProperty('sonatypeUsername') as String ?: "should be in different file"
                password findProperty('sonatypePassword') as String ?: "should be in different file"
            }
        }
        maven {
            name 'SonatypeOSSRHStaging'
            url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                // using findProperty(..) to be able to build without it being defined.
                username findProperty('sonatypeUsername') as String ?: "should be in different file"
                password findProperty('sonatypePassword') as String ?: "should be in different file"
            }
        }
    }
}

// Publishing "aliases"
// Publish to MavenLocal (.m2)
task matsPublishLocal(dependsOn: [publishToMavenLocal])
// Publish to Sonatype's OSSRH (OSS Repository Hosting), Snapshot and Staging
task matsPublishSnapshot(dependsOn: [publishAllPublicationsToSonatypeOSSRHSnapshotRepository])
task matsPublishStaging(dependsOn: [publishAllPublicationsToSonatypeOSSRHStagingRepository])
